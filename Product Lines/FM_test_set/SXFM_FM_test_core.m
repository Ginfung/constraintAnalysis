function [ f ] = SXFM_FM_test_core( x,objcount )
f = zeros(1,objcount);
% ------Generated automatically by XMLFeatureModelParser.java-------
% ALL OBJECTIVES ARE SHOULD BE MINIMIZED
%f(1) is rule violations
%f(2) is feature NOT provided
%f(3) is total cost
%f(4) is # number of  feature that were NOT used before
%f(5) is # total number of known defects

global cost;
global usedbefore;
global defects;
global totalFeatureNum;


%%
r_1_2_3_4 = x(1);
r_1_2_5_6 = x(2);
r_1_2_7_8 = x(3);
r_1_2_9_10_11_12_13 = x(4);
r_1_2_9_10_11_12_14 = x(5);
r_1_2_9_10_11_12_15 = x(6);
r_1_2_9_10_16 = x(7);
r_1_2_17_18 = x(8);
r_1_2_17_19 = x(9);
r_1_2_17_20_21 = x(10);
r_1_2_17_20_22 = x(11);
r_1_2_17_20_23 = x(12);
r_1_2_23_24 = x(13);
r_1_2_23_25 = x(14);
r_1_2_23_26 = x(15);
r_1_2_23_27 = x(16);
r_1_2_23_28 = x(17);
r_1_29_30 = x(18);
r_1_29_31 = x(19);
r_1_29_32 = x(20);
r_1_29_33_34_35 = x(21);
r_1_29_33_34_36 = x(22);
r_1_29_37 = x(23);
r_1_29_38 = x(24);
r_1_39_40 = x(25);
r_1_41_42_43_44_46 = x(26);
r_1_41_42_43_45_47 = x(27);
r_1_51_53_54 = x(28);
r_1_51_53_55_56_57 = x(29);
r_1_51_53_55_56_58 = x(30);
r_1_59_60_61 = x(31);
r_1_59_60_63 = x(32);
r_1_59_60_64 = x(33);
r_1_59_60_65 = x(34);
r_1_59_60_67 = x(35);
r_1_59_60_68 = x(36);
r_1_59_69_70 = x(37);
r_1_59_69_71_72 = x(38);
r_1_59_69_73_74 = x(39);
r_1_59_69_75_76 = x(40);
r_1_59_69_77_78 = x(41);
r_1_59_79_80 = x(42);
r_1_59_81_82 = x(43);
r_1_59_81_83 = x(44);
r_1_59_84 = x(45);
r_1_59_85 = x(46);
r_1_59_86 = x(47);
r_88_89_90_91 = x(48);
r_88_89_90_92 = x(49);
r_88_89_93_94_95 = x(50);
r_88_89_93_94_96 = x(51);
r_88_89_93_94_97 = x(52);
r_88_89_93_94_98 = x(53);
r_88_89_93_94_99 = x(54);
r_88_89_100_101_102 = x(55);
r_88_89_100_101_103 = x(56);
r_88_89_100_101_104 = x(57);
r_88_89_100_101_105 = x(58);
r_88_106 = x(59);
r_88_107 = x(60);
r_88_108 = x(61);
r_88_109 = x(62);
r_88_110_111_112_113 = x(63);
r_88_110_111_112_114 = x(64);
r_88_110_111_112_115 = x(65);
r_88_110_111_116_117 = x(66);
r_88_110_111_116_118 = x(67);
r_88_110_111_116_119 = x(68);
r_88_110_111_116_120 = x(69);
r_88_110_111_121_122 = x(70);
r_88_110_111_121_123 = x(71);
r_88_110_111_121_124 = x(72);
r_88_110_111_121_125 = x(73);
r_88_110_111_121_126 = x(74);
r_88_110_111_127_128 = x(75);
r_88_110_111_127_129 = x(76);
r_88_110_111_130_131 = x(77);
r_88_110_111_130_132 = x(78);
r_88_110_111_130_133 = x(79);
r_88_110_111_134_135 = x(80);
r_88_110_111_136_137 = x(81);
r_88_110_111_136_138 = x(82);
r_88_110_111_139_140 = x(83);
r_88_110_111_141_142 = x(84);
r_88_110_143_144_145_146_147 = x(85);
r_88_110_143_144_145_148 = x(86);
r_88_110_143_144_145_149 = x(87);
r_88_110_143_144_145_150 = x(88);
r_88_110_143_144_151_153 = x(89);
r_88_110_143_144_151_154 = x(90);
r_88_110_143_144_151_155 = x(91);
r_88_110_143_144_151_156 = x(92);
r_88_110_143_144_151_157 = x(93);
r_88_110_143_144_151_158 = x(94);
r_88_110_143_144_151_159 = x(95);
r_88_110_143_144_151_160 = x(96);
r_88_110_143_144_161 = x(97);
r_88_110_143_162_163_164 = x(98);
r_88_110_143_162_163_165 = x(99);
r_88_110_143_162_163_166 = x(100);
r_88_110_143_162_163_167 = x(101);
r_88_110_143_162_163_168 = x(102);
r_88_110_143_162_163_169 = x(103);
r_88_110_143_162_170_171 = x(104);
r_88_110_143_162_170_172 = x(105);
r_88_110_173 = x(106);
r_88_174_175_176 = x(107);
r_88_174_175_177 = x(108);
r_88_174_175_178 = x(109);
r_88_174_179_181_182 = x(110);
r_88_174_179_181_183 = x(111);
r_88_174_179_181_184 = x(112);
r_88_174_179 = r_88_174_179_181_182 + r_88_174_179_181_183 + r_88_174_179_181_184 == 1; x(113) = r_88_174_179;
r_88_89_100 = r_88_89_100_101_102 + r_88_89_100_101_103 + r_88_89_100_101_104 + r_88_89_100_101_105 == 1; x(114) = r_88_89_100;
r_88_89_93 = r_88_89_93_94_95 + r_88_89_93_94_96 + r_88_89_93_94_97 + r_88_89_93_94_98 + r_88_89_93_94_99 == 1; x(115) = r_88_89_93;
r_1_51_53_55 = r_1_51_53_55_56_57 + r_1_51_53_55_56_58 == 1; x(116) = r_1_51_53_55;
r_1_51 = r_1_51_53_54 + r_1_51_53_55 == 1; x(117) = r_1_51;
r_1_41_42 = r_1_51_53_55 + r_88_89_100 == 1; x(118) = r_1_41_42;
r_1_29_33 = r_1_29_33_34_35 + r_1_29_33_34_36 > 1; x(119) = r_1_29_33;
r_1_2_9_10_11 = r_1_2_9_10_11_12_13 + r_1_2_9_10_11_12_14 + r_1_2_9_10_11_12_15 == 1; x(120) = r_1_2_9_10_11;
r_1_2_9 = r_1_2_9_10_11 + r_1_2_9_10_16 == 1; x(121) = r_1_2_9;
r_88_174_175 = r_88_174_175_176 & r_88_174_175_177 & r_88_174_175_178;  x(122) = r_88_174_175;
r_88_174 = r_88_174_175 & r_88_174_179;  x(123) = r_88_174;
r_88_110_143_162_170 = r_88_110_143_162_170_171 | r_88_110_143_162_170_172;  x(124) = r_88_110_143_162_170;
r_88_110_143_162_163 = r_88_110_143_162_163_164 | r_88_110_143_162_163_165 | r_88_110_143_162_163_166 | r_88_110_143_162_163_167 | r_88_110_143_162_163_168 | r_88_110_143_162_163_169;  x(125) = r_88_110_143_162_163;
r_88_110_143_162 = r_88_110_143_162_163 | r_88_110_143_162_170;  x(126) = r_88_110_143_162;
r_88_110_143_144_151 = r_88_110_143_144_151_153 | r_88_110_143_144_151_154 | r_88_110_143_144_151_155 | r_88_110_143_144_151_156 | r_88_110_143_144_151_157 | r_88_110_143_144_151_158 | r_88_110_143_144_151_159 | r_88_110_143_144_151_160;  x(127) = r_88_110_143_144_151;
r_88_110_143_144_145_146 = r_88_110_143_144_145_146_147;  x(128) = r_88_110_143_144_145_146;
r_88_110_143_144_145 = r_88_110_143_144_145_146 | r_88_110_143_144_145_148 | r_88_110_143_144_145_149 | r_88_110_143_144_145_150;  x(129) = r_88_110_143_144_145;
r_88_110_143_144 = r_88_110_143_144_145 | r_88_110_143_144_151 | r_88_110_143_144_161;  x(130) = r_88_110_143_144;
r_88_110_143 = r_88_110_143_144 & r_88_110_143_162;  x(131) = r_88_110_143;
r_88_110_111_141 = r_88_110_111_141_142;  x(132) = r_88_110_111_141;
r_88_110_111_139 = r_88_110_111_139_140;  x(133) = r_88_110_111_139;
r_88_110_111_136 = r_88_110_111_136_137 & r_88_110_111_136_138;  x(134) = r_88_110_111_136;
r_88_110_111_134 = r_88_110_111_134_135;  x(135) = r_88_110_111_134;
r_88_110_111_130 = r_88_110_111_130_131 & r_88_110_111_130_132 & r_88_110_111_130_133;  x(136) = r_88_110_111_130;
r_88_110_111_127 = r_88_110_111_127_128 & r_88_110_111_127_129;  x(137) = r_88_110_111_127;
r_88_110_111_121 = r_88_110_111_121_122 & r_88_110_111_121_123 & r_88_110_111_121_124 & r_88_110_111_121_125 & r_88_110_111_121_126;  x(138) = r_88_110_111_121;
r_88_110_111_116 = r_88_110_111_116_117 & r_88_110_111_116_118 & r_88_110_111_116_119 & r_88_110_111_116_120;  x(139) = r_88_110_111_116;
r_88_110_111_112 = r_88_110_111_112_113 & r_88_110_111_112_114 & r_88_110_111_112_115;  x(140) = r_88_110_111_112;
r_88_110_111 = r_88_110_111_112 & r_88_110_111_116 & r_88_110_111_121 & r_88_110_111_127 & r_88_110_111_130 & r_88_110_111_134 & r_88_110_111_136 & r_88_110_111_139 & r_88_110_111_141;  x(141) = r_88_110_111;
r_88_110 = r_88_110_111 & r_88_110_143 & r_88_110_173;  x(142) = r_88_110;
r_88_89_90 = r_88_89_90_91 | r_88_89_90_92;  x(143) = r_88_89_90;
r_88_89 = r_88_89_93 & r_88_89_100;  x(144) = r_88_89;
r_88 = r_88_110 & r_88_174;  x(145) = r_88;
r_1_59_81 = r_1_59_81_82 | r_1_59_81_83;  x(146) = r_1_59_81;
r_1_59_79 = r_1_59_79_80;  x(147) = r_1_59_79;
r_1_59_69_77 = r_1_59_69_77_78;  x(148) = r_1_59_69_77;
r_1_59_69_75 = r_1_59_69_75_76;  x(149) = r_1_59_69_75;
r_1_59_69_73 = r_1_59_69_73_74;  x(150) = r_1_59_69_73;
r_1_59_69_71 = r_1_59_69_71_72;  x(151) = r_1_59_69_71;
r_1_59_69 = r_1_59_69_70 | r_1_59_69_71 | r_1_59_69_73 | r_1_59_69_75 | r_1_59_69_77;  x(152) = r_1_59_69;
r_1_59_60 = r_1_59_60_61 | r_1_59_60_63 | r_1_59_60_64 | r_1_59_60_65 | r_1_59_60_67 | r_1_59_60_68;  x(153) = r_1_59_60;
r_1_59 = r_1_59_60 | r_1_59_69 | r_1_59_79 | r_1_59_81 | r_1_59_84 | r_1_59_85 | r_1_59_86;  x(154) = r_1_59;
r_1_41 = r_1_41_42;  x(155) = r_1_41;
r_1_39 = r_1_39_40;  x(156) = r_1_39;
r_1_29 = r_1_29_30 | r_1_29_31 | r_1_29_32 | r_1_29_33 | r_1_29_37 | r_1_29_38;  x(157) = r_1_29;
r_1_2_23 = r_1_2_23_24 | r_1_2_23_25 | r_1_2_23_26 | r_1_2_23_27 | r_1_2_23_28;  x(158) = r_1_2_23;
r_1_2_17_20 = r_1_2_17_20_21 | r_1_2_17_20_22 | r_1_2_17_20_23;  x(159) = r_1_2_17_20;
r_1_2_17 = r_1_2_17_18 | r_1_2_17_19 | r_1_2_17_20;  x(160) = r_1_2_17;
r_1_2_7 = r_1_2_7_8;  x(161) = r_1_2_7;
r_1_2_5 = r_1_2_5_6;  x(162) = r_1_2_5;
r_1_2_3 = r_1_2_3_4;  x(163) = r_1_2_3;
r_1_2 = r_1_2_9 & r_1_2_17 & r_1_2_23;  x(164) = r_1_2;
r_1 = r_1_2 & r_1_29;  x(165) = r_1;
r = r_1;  x(166) = r;
%%
c = ones(1,46);
c(1) = (~r_1_2_3_4) | r_1_29_38;
c(2) = r_1_59_60 | (~r_88_110_111_141_142);
c(3) = r_1_59_60 | (~r_88_110_111_141);
c(4) = r_1_59_60 | (~r_88_110_173);
c(5) = (~r_1_29_37) | r_1_59_60 | r_1_59_69 | r_1_59_79 | r_1_59_86;
c(6) = r_1_29_30 | (~r_1_39);
c(7) = r_1_29_31 | (~r_88_110_111_121);
c(8) = (~r_1_2_9_10_11_12_15) | r_1_59_60;
c(9) = (~r_1_2_9_10_16) | r_1_2_17_20;
c(10) = (~r_1_2_9_10_11_12_15) | r_1_29_33;
c(11) = (~r_1_2_17_20_23) | r_1_29_32;
c(12) = (~r_1_2_9_10_11_12_13) | r_1_29_33;
c(13) = (~r_1_2_23_28) | r_1_59_60;
c(14) = (~r_1_2_9_10_11_12_14) | r_1_59_69 | r_1_59_86;
c(15) = (~r_1_2_9_10_11) | r_1_29_37;
c(16) = (~r_1_29_30) | r_1_59_60 | r_1_59_69 | r_1_59_79 | r_1_59_81 | r_1_59_86;
c(17) = (~r_1_29_31) | r_1_59_79 | r_1_59_81 | r_1_59_86;
c(18) = (~r_1_2_9_10_11_12_13) | r_1_29_37;
c(19) = (~r_1_29_32) | r_1_59_81;
c(20) = (~r_1_2_5_6) | r_1_29_38;
c(21) = (~r_1_29_33) | r_1_59_60 | r_1_59_69 | r_1_59_79 | r_1_59_81 | r_1_59_86;
c(22) = (~r_1_2_7_8) | r_1_29_38;
c(23) = r_1_59_79 | (~r_88_110_111_136_138);
c(24) = r_1_59_60 | (~r_88_110_111_121_124);
c(25) = r_1_59_60 | (~r_88_110_111_127_129);
c(26) = r_1_59_60 | (~r_88_110_111_127_128);
c(27) = r_1_59_60 | r_1_59_69 | r_1_59_79 | (~r_88_110_111_121_126);
c(28) = r_1_59_60 | (~r_88_110_111_121_125);
c(29) = r_1_59_60 | (~r_88_110_111_136_137);
c(30) = r_1_59_60 | (~r_88_110_111_130_133);
c(31) = r_1_59_60 | (~r_88_110_111_130_132);
c(32) = r_1_59_60 | (~r_88_110_111_130_131);
c(33) = (~r_1_2_9_10_11_12_15) | r_1_29_33;
c(34) = r_1_59_69 | r_1_59_79 | (~r_88_110_111_121_122);
c(35) = (~r_1_2_9_10_11_12_13) | r_1_29_37;
c(36) = r_1_59_69 | r_1_59_79 | (~r_88_110_111_121_123);
c(37) = r_1_59_60 | (~r_88_110_111_139);
c(38) = r_1_59_60 | (~r_88_110_111_139_140);
c(39) = r_1_59_60 | r_1_59_69 | r_1_59_79 | r_1_59_81 | r_1_59_86 | (~r_88_110_111_112_113);
c(40) = r_1_59_60 | (~r_88_110_111_112_114);
c(41) = (~r_1_51_53_55_56_58) | (~r_1_59_81);
c(42) = (~r_1_51_53_55_56_58) | (~r_1_59_81);
c(43) = r_1_59_60 | (~r_88_110_111_116_119);
c(44) = r_1_59_69 | (~r_88_110_111_116_120);
c(45) = r_1_59_60 | (~r_88_110_111_116_117);
c(46) = r_1_59_60 | r_1_59_69 | (~r_88_110_111_116_118);

%%


%f(1) is rule violations
%f(2) is feature NOT provided
%f(3) is total cost
%f(4) is # number of  feature that were NOT used before
%f(5) is # total number of known defects

f(1) = 46 - sum(c);
f(2) = totalFeatureNum - sum(x);
if  objcount >= 3
    f(3) = sum(x.*cost);
end
if objcount >= 4
    f(4) = totalFeatureNum - sum(x.*usedbefore);
end
if objcount >= 5
    f(5) = sum(x.*defects);
end

